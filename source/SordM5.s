#ifdef __arm__

#include "ARMZ80/ARMZ80.i"
#include "SegaVDP/SegaVDP.i"
#include "ARMZ80CTC/ARMZ80CTC.i"
#include "PPI8255/PPI8255.i"

	.global sordM5Reset
	.global IO_Params_SordM5_R
	.global IO_Params_SordM5_W
	.global sordM5Input
	.global CTC0Update
	.global CTC0SetTrg3
	.global CTC0GetIrqVector
	.global CTC0IrqAcknowledge


	.syntax unified
	.arm

	.section .text
	.align 2
;@----------------------------------------------------------------------------
;@ Sord M5
IO_Params_SordM5_R:
	.long 0x000000F0, CTC0Read			;@ 0x00-0x0F
	.long 0x001000F1, VDP0DataR			;@ 0x10-0x1E
	.long 0x001100F1, VDP0StatR			;@ 0x11-0x1F
	.long 0x003000F7, M5KBRowRead0		;@ 0x30,0x38
	.long 0x003100F7, M5KBRowRead1		;@ 0x31,0x39
	.long 0x003200F7, M5KBRowRead2		;@ 0x32,0x3A
	.long 0x003300F7, M5KBRowRead3		;@ 0x33,0x3B
	.long 0x003400F7, M5KBRowRead4		;@ 0x34,0x3C
	.long 0x003500F7, M5KBRowRead5		;@ 0x35,0x3D
	.long 0x003600F7, M5KBRowRead6		;@ 0x36,0x3E
	.long 0x003700F7, M5KBRowRead7		;@ 0x37,0x3F
//	.long 0x004000F0, M5PortR			;@ 0x40-0x4F
	.long 0x005000F0, M5IOCtrlR			;@ 0x50-0x5F
	.long 0x007000FF, PPI1PortAR		;@ 0x70
	.long 0x007100FF, PPI1PortBR		;@ 0x71
	.long 0x007200FF, PPI1PortCR		;@ 0x72
	.long 0x007300FF, PPI1PortDR		;@ 0x73
	.long 0x00000000, empty_R			;@ everything else
IO_Params_SordM5_W:
	.long 0x000000F0, CTC0Write			;@ 0x00-0x0F
	.long 0x001000F1, VDP0DataTMSW		;@ 0x10-0x1E
	.long 0x001100F1, VDP0CtrlW			;@ 0x11-0x1F
	.long 0x002000F0, SN76496_W			;@ 0x20-0x2F
//	.long 0x003000F0, M5KeyBoardW		;@ 0x30-0x3F
//	.long 0x004000F0, M5PortW			;@ 0x40
	.long 0x005000F0, M5IOCtrlW			;@ 0x50
	.long 0x007000FF, PPI1PortAW		;@ 0x70
	.long 0x007100FF, PPI1PortBW		;@ 0x71
	.long 0x007200FF, PPI1PortCW		;@ 0x72
	.long 0x007300FF, PPI1PortDW		;@ 0x73
	.long 0x00000000, empty_W			;@ everything else

;@----------------------------------------------------------------------------
sordM5Reset:
;@----------------------------------------------------------------------------
	stmfd sp!,{lr}

	bl PPI1Reset
	bl CTC0Reset

	mov r1,#0
	ldr r0,=keyboardRows
	str r1,[r0],#4
	str r1,[r0],#4

	ldmfd sp!,{lr}
	bx lr

;@----------------------------------------------------------------------------
M5IOCtrlR:				;@ Printer/Cassette input
;@----------------------------------------------------------------------------
	ldrb r0,sordM5Input
//	mov r0,#0x00				;@ Default input
//	orr r0,r0,#0x01				;@ Casette input
//	orr r0,r0,#0x02				;@ Centronics busy
//	orr r0,r0,#0x80				;@ Reset key
	bx lr
;@----------------------------------------------------------------------------
M5IOCtrlW:				;@ Printer/Cassette output
;@----------------------------------------------------------------------------
//	orr r0,r0,#0x01				;@ Casette output, centronics strobe
//	orr r0,r0,#0x02				;@ Casette remote
	bx lr
;@----------------------------------------------------------------------------
M5KBRowRead1:		;@ Joy button(s)
;@----------------------------------------------------------------------------
	ldr r1,=joy1State
	ldrb r0,[r1]
	b getKeyB
;@----------------------------------------------------------------------------
M5KBRowRead0:
;@----------------------------------------------------------------------------
;@----------------------------------------------------------------------------
M5KBRowRead2:
;@----------------------------------------------------------------------------
;@----------------------------------------------------------------------------
M5KBRowRead3:
;@----------------------------------------------------------------------------
;@----------------------------------------------------------------------------
M5KBRowRead4:
;@----------------------------------------------------------------------------
;@----------------------------------------------------------------------------
M5KBRowRead5:
;@----------------------------------------------------------------------------
;@----------------------------------------------------------------------------
M5KBRowRead6:
;@----------------------------------------------------------------------------
	mov r0,#0
getKeyB:
	and r1,addy,#0x7
	ldr r2,=keyboardRows
	ldrb r1,[r2,r1]
	orr r0,r0,r1
	bx lr
;@----------------------------------------------------------------------------
M5KBRowRead7:		;@ Joypad
;@----------------------------------------------------------------------------
	ldr r0,=joy0State
	ldrb r0,[r0]
	bx lr
;@----------------------------------------------------------------------------
CTC0Reset:
;@----------------------------------------------------------------------------
	stmfd sp!,{r4,lr}

	adr ctcptr,CTC_0
	bl Z80CTCReset
	ldr r0,=Z80SetIRQPin
	str r0,[ctcptr,#ctcIrqFPtr]

	ldmfd sp!,{r4,lr}
	bx lr
;@----------------------------------------------------------------------------
CTC0Update:				;@ r0 = cycles
;@----------------------------------------------------------------------------
	adr ctcptr,CTC_0
	b Z80CTCUpdate
;@----------------------------------------------------------------------------
CTC0Read:
;@----------------------------------------------------------------------------
	and r1,addy,#0x03
	adr ctcptr,CTC_0
	b Z80CTCRead
;@----------------------------------------------------------------------------
CTC0Write:				;@ r0 = data
;@----------------------------------------------------------------------------
	and r1,addy,#0x03
	adr ctcptr,CTC_0
	b Z80CTCWrite
;@----------------------------------------------------------------------------
CTC0SetTrg0:			;@ r0 = data
;@----------------------------------------------------------------------------
	adr ctcptr,CTC_0
	b Z80CTCSetTrg0
;@----------------------------------------------------------------------------
CTC0SetTrg1:			;@ r0 = data
;@----------------------------------------------------------------------------
	adr ctcptr,CTC_0
	b Z80CTCSetTrg1
;@----------------------------------------------------------------------------
CTC0SetTrg2:			;@ r0 = data
;@----------------------------------------------------------------------------
	adr ctcptr,CTC_0
	b Z80CTCSetTrg2
;@----------------------------------------------------------------------------
CTC0SetTrg3:			;@ r0 = data
;@----------------------------------------------------------------------------
	stmfd sp!,{r1,r2,r12,lr}
	adr ctcptr,CTC_0
	bl Z80CTCSetTrg3
	ldmfd sp!,{r1,r2,r12,lr}
	bx lr
;@----------------------------------------------------------------------------
CTC0GetIrqVector:
;@----------------------------------------------------------------------------
	adr ctcptr,CTC_0
	b Z80CTCGetIrqVector
;@----------------------------------------------------------------------------
CTC0IrqAcknowledge:
;@----------------------------------------------------------------------------
	adr ctcptr,CTC_0
	b Z80CTCIrqAcknowledge

;@----------------------------------------------------------------------------
sordM5Input:
	.long 0
CTC_0:
	.space ctcSize
;@----------------------------------------------------------------------------
	.end
#endif // #ifdef __arm__
